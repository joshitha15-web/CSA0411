#include <stdio.h>
#define SIZE 3

int predict(int pages[], int frames[], int index, int n) {
    int res = -1, farthest = index;
    for (int i = 0; i < SIZE; i++) {
        int j;
        for (j = index; j < n; j++) {
            if (frames[i] == pages[j]) {
                if (j > farthest) {
                    farthest = j;
                    res = i;
                }
                break;
            }
        }
        if (j == n) return i;
    }
    return (res == -1) ? 0 : res;
}

int main() {
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3};
    int n = sizeof(pages)/sizeof(pages[0]);
    int frames[SIZE], faults = 0;

    for (int i = 0; i < SIZE; i++) frames[i] = -1;

    for (int i = 0; i < n; i++) {
        int found = 0;
        for (int j = 0; j < SIZE; j++) {
            if (frames[j] == pages[i]) {
                found = 1;
                break;
            }
        }
        if (!found) {
            int pos = -1;
            for (int j = 0; j < SIZE; j++) {
                if (frames[j] == -1) {
                    pos = j;
                    break;
                }
            }
            if (pos == -1) pos = predict(pages, frames, i + 1, n);
            frames[pos] = pages[i];
            faults++;
        }
    }
    printf("Total Page Faults (Optimal): %d\n", faults);
    return 0;
}
