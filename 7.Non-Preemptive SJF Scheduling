#include <stdio.h>

struct Process {
    int pid, at, bt, wt, tat, completed;
};

int main() {
    int n, time = 0, completed = 0;
    printf("Enter number of processes: ");
    scanf("%d", &n);

    struct Process p[n];
    for (int i = 0; i < n; i++) {
        p[i].pid = i + 1;
        printf("Enter Arrival Time and Burst Time for P%d: ", p[i].pid);
        scanf("%d %d", &p[i].at, &p[i].bt);
        p[i].completed = 0;
    }

    float totalWT = 0, totalTAT = 0;

    while (completed < n) {
        int idx = -1, minBT = 9999;

        for (int i = 0; i < n; i++) {
            if (!p[i].completed && p[i].at <= time && p[i].bt < minBT) {
                minBT = p[i].bt;
                idx = i;
            }
        }

        if (idx != -1) {
            p[idx].wt = time - p[idx].at;
            if (p[idx].wt < 0) p[idx].wt = 0;
            time += p[idx].bt;
            p[idx].tat = p[idx].wt + p[idx].bt;
            p[idx].completed = 1;
            completed++;

            totalWT += p[idx].wt;
            totalTAT += p[idx].tat;
        } else {
            time++;
        }
    }

    printf("\nProcess\tAT\tBT\tWT\tTAT\n");
    for (int i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t%d\t%d\n", p[i].pid, p[i].at, p[i].bt, p[i].wt, p[i].tat);
    }

    printf("\nAvg Waiting Time: %.2f", totalWT / n);
    printf("\nAvg Turnaround Time: %.2f\n", totalTAT / n);

    return 0;
}
